# Based on https://martin-renze.de/posts/gitlab-ci-releases/
# https://docs.gitlab.com/ee/user/project/releases/release_cicd_examples.html
# https://about.gitlab.com/blog/2023/11/01/tutorial-automated-release-and-release-notes-with-gitlab/
stages:
  - test
  - prepare
  - build
  - release

run_tests:
  stage: test
  image: michaelmcandrew/civicrm-buildkit:latest
  script:
    - sudo apt update
    - sudo apt -y install jq
    - phpcs-civi --ignore=vendor --report=json --report-json=gl-code-quality-report-tmp.json . || true
    - 'ls -la gl-code-quality-report-tmp.json'
    - 'jq "[.files | keys[] as \$file | .[] | .messages | .[] as \$msg | {type: \"issue\", severity: \"info\", check_name: \$msg.source, categories: [\"PHP\", \"phpcs\"], fingerprint: (\"\(\$file):\(\$msg.line):\(\$msg.source)\"), description: \$msg.message, location: { path: \$file, lines: {begin: \$msg.line, end: \$msg.line }}}]" gl-code-quality-report-tmp.json > gl-code-quality-report.json'
  artifacts:
    reports:
      codequality: gl-code-quality-report.json

release_notes:
  stage: prepare
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - apk add curl jq
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
  artifacts:
    paths:
      - release_notes.md
  tags:
    - test-1-docker

build_job:
  stage: build
  image: composer
  script:
    - composer install
    - RELEASE_VERSION=$(grep '<version' info.xml | sed -e 's/.*<version>//' -e 's/<\/version>//')
    - echo "Found version $RELEASE_VERSION"
    - mkdir build
    - zip -qr9 --exclude=.git* --exclude=build build/${CI_PROJECT_NAME}-${RELEASE_VERSION}.zip .
    - echo BUILD_JOB_ID=$CI_JOB_ID >> variables.env
    - echo BUILD_VERSION=$RELEASE_VERSION >> variables.env
  artifacts:
    paths:
      - build
    reports:
      dotenv: variables.env
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - test-1-docker

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: build_job
      artifacts: true
    - job: release_notes
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Running release_job for $TAG"
  release:
    name: 'Version $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: '${CI_PROJECT_NAME}-${RELEASE_VERSION}.zip'
          url: '${CI_PROJECT_URL}/-/jobs/${BUILD_JOB_ID}/artifacts/file/build/${CI_PROJECT_NAME}-${RELEASE_VERSION}.zip'
  tags:
    - test-1-docker
